name: build

on:
  push:
    branches:
      - "main"
      - "develop"
    tags:
      - "v*"
  pull_request:

env:
  REGISTRY: ghcr.io
  REGISTRY_IMAGE: ghcr.io/${{ github.repository }}
  GO_VERSION: '1.25'
  NODE_VERSION: '22.11.0'

permissions:
  contents: write
  packages: write

jobs:
  web:
    name: Build web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Set up corepack
        run: npm install -g corepack@latest && corepack enable

      # It can not be done before enable corepack
      - name: Set up cache
        uses: actions/setup-node@v4
        with:
          cache: pnpm
          cache-dependency-path: web/pnpm-lock.yaml

      - name: Fetch web dependencies
        working-directory: web
        run: pnpm install --frozen-lockfile

      - name: Build web frontend
        working-directory: web
        run: CI= pnpm run build

      - name: Upload web production build
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: web/dist
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Test
        run: go test -v ./...

  goreleaserbuild:
    name: Build Go binaries
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: web
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download web production build
        uses: actions/download-artifact@v5
        with:
          name: web-dist
          path: web/dist

      - name: Run GoReleaser build
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=validate,publish --parallelism 99
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: shinkro
          path: |
            dist/*.tar.gz
            dist/*.zip

  goreleaser:
    name: Build and publish binaries
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: web
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Download web production build
        uses: actions/download-artifact@v5
        with:
          name: web-dist
          path: web/dist

      - name: Run GoReleaser build and publish tags
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: shinkro
          path: |
            dist/*.tar.gz
            dist/*.zip

  docker:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    needs: web
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download web production build
        uses: actions/download-artifact@v5
        with:
          name: web-dist
          path: web/dist

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/varoOP/shinkro
          tags: |
            type=semver,pattern={{raw}}
            type=ref,event=branch
            type=ref,event=pr

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish image
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./ci.Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          push: ${{ github.event.pull_request.head.repo.full_name == 'varoOP/shinkro' || github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ github.event.pull_request.head.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
